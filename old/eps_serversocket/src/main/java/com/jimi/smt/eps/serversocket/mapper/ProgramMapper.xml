<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jimi.smt.eps.serversocket.mapper.ProgramMapper" >

    <resultMap id="BaseResultMap" type="com.jimi.smt.eps.serversocket.entity.Program" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="file_name" property="fileName" jdbcType="VARCHAR" />
        <result column="client" property="client" jdbcType="VARCHAR" />
        <result column="machine_name" property="machineName" jdbcType="VARCHAR" />
        <result column="version" property="version" jdbcType="VARCHAR" />
        <result column="machine_config" property="machineConfig" jdbcType="VARCHAR" />
        <result column="program_no" property="programNo" jdbcType="VARCHAR" />
        <result column="line" property="line" jdbcType="VARCHAR" />
        <result column="effective_date" property="effectiveDate" jdbcType="VARCHAR" />
        <result column="PCB_no" property="pcbNo" jdbcType="VARCHAR" />
        <result column="BOM" property="bom" jdbcType="VARCHAR" />
        <result column="program_name" property="programName" jdbcType="VARCHAR" />
        <result column="auditor" property="auditor" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="work_order" property="workOrder" jdbcType="VARCHAR" />
        <result column="board_type" property="boardType" jdbcType="INTEGER" />
        <result column="state" property="state" jdbcType="INTEGER" />
        <result column="structure" property="structure" jdbcType="INTEGER" />
        <result column="plan_product" property="planProduct" jdbcType="INTEGER" />
        <result column="already_product" property="alreadyProduct" jdbcType="INTEGER" />
    </resultMap>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Column_List" >
        id, file_name, client, machine_name, version, machine_config, program_no, line, effective_date, 
        PCB_no, BOM, program_name, auditor, create_time, work_order, board_type, state, structure, 
        plan_product, already_product
    </sql>

    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jimi.smt.eps.serversocket.entity.Program" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from program
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select 
        <include refid="Base_Column_List" />
        from program
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from program
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <delete id="deleteByExample" parameterType="com.jimi.smt.eps.serversocket.entity.Program" >
        delete from program
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>

    <insert id="insert" parameterType="com.jimi.smt.eps.serversocket.entity.Program" >
        insert into program (id, file_name, client, 
            machine_name, version, machine_config, 
            program_no, line, effective_date, 
            PCB_no, BOM, program_name, 
            auditor, create_time, work_order, 
            board_type, state, structure, 
            plan_product, already_product)
        values (#{id,jdbcType=VARCHAR}, #{fileName,jdbcType=VARCHAR}, #{client,jdbcType=VARCHAR}, 
            #{machineName,jdbcType=VARCHAR}, #{version,jdbcType=VARCHAR}, #{machineConfig,jdbcType=VARCHAR}, 
            #{programNo,jdbcType=VARCHAR}, #{line,jdbcType=VARCHAR}, #{effectiveDate,jdbcType=VARCHAR}, 
            #{pcbNo,jdbcType=VARCHAR}, #{bom,jdbcType=VARCHAR}, #{programName,jdbcType=VARCHAR}, 
            #{auditor,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{workOrder,jdbcType=VARCHAR}, 
            #{boardType,jdbcType=INTEGER}, #{state,jdbcType=INTEGER}, #{structure,jdbcType=INTEGER}, 
            #{planProduct,jdbcType=INTEGER}, #{alreadyProduct,jdbcType=INTEGER})
    </insert>

    <insert id="insertSelective" parameterType="com.jimi.smt.eps.serversocket.entity.Program" >
        insert into program
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="fileName != null" >
                file_name,
            </if>
            <if test="client != null" >
                client,
            </if>
            <if test="machineName != null" >
                machine_name,
            </if>
            <if test="version != null" >
                version,
            </if>
            <if test="machineConfig != null" >
                machine_config,
            </if>
            <if test="programNo != null" >
                program_no,
            </if>
            <if test="line != null" >
                line,
            </if>
            <if test="effectiveDate != null" >
                effective_date,
            </if>
            <if test="pcbNo != null" >
                PCB_no,
            </if>
            <if test="bom != null" >
                BOM,
            </if>
            <if test="programName != null" >
                program_name,
            </if>
            <if test="auditor != null" >
                auditor,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="workOrder != null" >
                work_order,
            </if>
            <if test="boardType != null" >
                board_type,
            </if>
            <if test="state != null" >
                state,
            </if>
            <if test="structure != null" >
                structure,
            </if>
            <if test="planProduct != null" >
                plan_product,
            </if>
            <if test="alreadyProduct != null" >
                already_product,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="fileName != null" >
                #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="client != null" >
                #{client,jdbcType=VARCHAR},
            </if>
            <if test="machineName != null" >
                #{machineName,jdbcType=VARCHAR},
            </if>
            <if test="version != null" >
                #{version,jdbcType=VARCHAR},
            </if>
            <if test="machineConfig != null" >
                #{machineConfig,jdbcType=VARCHAR},
            </if>
            <if test="programNo != null" >
                #{programNo,jdbcType=VARCHAR},
            </if>
            <if test="line != null" >
                #{line,jdbcType=VARCHAR},
            </if>
            <if test="effectiveDate != null" >
                #{effectiveDate,jdbcType=VARCHAR},
            </if>
            <if test="pcbNo != null" >
                #{pcbNo,jdbcType=VARCHAR},
            </if>
            <if test="bom != null" >
                #{bom,jdbcType=VARCHAR},
            </if>
            <if test="programName != null" >
                #{programName,jdbcType=VARCHAR},
            </if>
            <if test="auditor != null" >
                #{auditor,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="workOrder != null" >
                #{workOrder,jdbcType=VARCHAR},
            </if>
            <if test="boardType != null" >
                #{boardType,jdbcType=INTEGER},
            </if>
            <if test="state != null" >
                #{state,jdbcType=INTEGER},
            </if>
            <if test="structure != null" >
                #{structure,jdbcType=INTEGER},
            </if>
            <if test="planProduct != null" >
                #{planProduct,jdbcType=INTEGER},
            </if>
            <if test="alreadyProduct != null" >
                #{alreadyProduct,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>

    <select id="countByExample" parameterType="com.jimi.smt.eps.serversocket.entity.Program" resultType="java.lang.Integer" >
        select count(*) from program
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>

    <update id="updateByExampleSelective" parameterType="map" >
        update program
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.fileName != null" >
                file_name = #{record.fileName,jdbcType=VARCHAR},
            </if>
            <if test="record.client != null" >
                client = #{record.client,jdbcType=VARCHAR},
            </if>
            <if test="record.machineName != null" >
                machine_name = #{record.machineName,jdbcType=VARCHAR},
            </if>
            <if test="record.version != null" >
                version = #{record.version,jdbcType=VARCHAR},
            </if>
            <if test="record.machineConfig != null" >
                machine_config = #{record.machineConfig,jdbcType=VARCHAR},
            </if>
            <if test="record.programNo != null" >
                program_no = #{record.programNo,jdbcType=VARCHAR},
            </if>
            <if test="record.line != null" >
                line = #{record.line,jdbcType=VARCHAR},
            </if>
            <if test="record.effectiveDate != null" >
                effective_date = #{record.effectiveDate,jdbcType=VARCHAR},
            </if>
            <if test="record.pcbNo != null" >
                PCB_no = #{record.pcbNo,jdbcType=VARCHAR},
            </if>
            <if test="record.bom != null" >
                BOM = #{record.bom,jdbcType=VARCHAR},
            </if>
            <if test="record.programName != null" >
                program_name = #{record.programName,jdbcType=VARCHAR},
            </if>
            <if test="record.auditor != null" >
                auditor = #{record.auditor,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.workOrder != null" >
                work_order = #{record.workOrder,jdbcType=VARCHAR},
            </if>
            <if test="record.boardType != null" >
                board_type = #{record.boardType,jdbcType=INTEGER},
            </if>
            <if test="record.state != null" >
                state = #{record.state,jdbcType=INTEGER},
            </if>
            <if test="record.structure != null" >
                structure = #{record.structure,jdbcType=INTEGER},
            </if>
            <if test="record.planProduct != null" >
                plan_product = #{record.planProduct,jdbcType=INTEGER},
            </if>
            <if test="record.alreadyProduct != null" >
                already_product = #{record.alreadyProduct,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByExample" parameterType="map" >
        update program
        set id = #{record.id,jdbcType=VARCHAR},
            file_name = #{record.fileName,jdbcType=VARCHAR},
            client = #{record.client,jdbcType=VARCHAR},
            machine_name = #{record.machineName,jdbcType=VARCHAR},
            version = #{record.version,jdbcType=VARCHAR},
            machine_config = #{record.machineConfig,jdbcType=VARCHAR},
            program_no = #{record.programNo,jdbcType=VARCHAR},
            line = #{record.line,jdbcType=VARCHAR},
            effective_date = #{record.effectiveDate,jdbcType=VARCHAR},
            PCB_no = #{record.pcbNo,jdbcType=VARCHAR},
            BOM = #{record.bom,jdbcType=VARCHAR},
            program_name = #{record.programName,jdbcType=VARCHAR},
            auditor = #{record.auditor,jdbcType=VARCHAR},
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
            work_order = #{record.workOrder,jdbcType=VARCHAR},
            board_type = #{record.boardType,jdbcType=INTEGER},
            state = #{record.state,jdbcType=INTEGER},
            structure = #{record.structure,jdbcType=INTEGER},
            plan_product = #{record.planProduct,jdbcType=INTEGER},
            already_product = #{record.alreadyProduct,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>

    <update id="updateByPrimaryKeySelective" parameterType="com.jimi.smt.eps.serversocket.entity.Program" >
        update program
        <set >
            <if test="fileName != null" >
                file_name = #{fileName,jdbcType=VARCHAR},
            </if>
            <if test="client != null" >
                client = #{client,jdbcType=VARCHAR},
            </if>
            <if test="machineName != null" >
                machine_name = #{machineName,jdbcType=VARCHAR},
            </if>
            <if test="version != null" >
                version = #{version,jdbcType=VARCHAR},
            </if>
            <if test="machineConfig != null" >
                machine_config = #{machineConfig,jdbcType=VARCHAR},
            </if>
            <if test="programNo != null" >
                program_no = #{programNo,jdbcType=VARCHAR},
            </if>
            <if test="line != null" >
                line = #{line,jdbcType=VARCHAR},
            </if>
            <if test="effectiveDate != null" >
                effective_date = #{effectiveDate,jdbcType=VARCHAR},
            </if>
            <if test="pcbNo != null" >
                PCB_no = #{pcbNo,jdbcType=VARCHAR},
            </if>
            <if test="bom != null" >
                BOM = #{bom,jdbcType=VARCHAR},
            </if>
            <if test="programName != null" >
                program_name = #{programName,jdbcType=VARCHAR},
            </if>
            <if test="auditor != null" >
                auditor = #{auditor,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="workOrder != null" >
                work_order = #{workOrder,jdbcType=VARCHAR},
            </if>
            <if test="boardType != null" >
                board_type = #{boardType,jdbcType=INTEGER},
            </if>
            <if test="state != null" >
                state = #{state,jdbcType=INTEGER},
            </if>
            <if test="structure != null" >
                structure = #{structure,jdbcType=INTEGER},
            </if>
            <if test="planProduct != null" >
                plan_product = #{planProduct,jdbcType=INTEGER},
            </if>
            <if test="alreadyProduct != null" >
                already_product = #{alreadyProduct,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.jimi.smt.eps.serversocket.entity.Program" >
        update program
        set file_name = #{fileName,jdbcType=VARCHAR},
            client = #{client,jdbcType=VARCHAR},
            machine_name = #{machineName,jdbcType=VARCHAR},
            version = #{version,jdbcType=VARCHAR},
            machine_config = #{machineConfig,jdbcType=VARCHAR},
            program_no = #{programNo,jdbcType=VARCHAR},
            line = #{line,jdbcType=VARCHAR},
            effective_date = #{effectiveDate,jdbcType=VARCHAR},
            PCB_no = #{pcbNo,jdbcType=VARCHAR},
            BOM = #{bom,jdbcType=VARCHAR},
            program_name = #{programName,jdbcType=VARCHAR},
            auditor = #{auditor,jdbcType=VARCHAR},
            create_time = #{createTime,jdbcType=TIMESTAMP},
            work_order = #{workOrder,jdbcType=VARCHAR},
            board_type = #{boardType,jdbcType=INTEGER},
            state = #{state,jdbcType=INTEGER},
            structure = #{structure,jdbcType=INTEGER},
            plan_product = #{planProduct,jdbcType=INTEGER},
            already_product = #{alreadyProduct,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>
</mapper>