<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="com.jimi.smt.eps.serversocket.mapper.DisplayMapper">

	<resultMap id="BaseResultMap"
		type="com.jimi.smt.eps.serversocket.entity.Display">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="line" property="line" jdbcType="VARCHAR" />
		<result column="work_order" property="workOrder"
			jdbcType="VARCHAR" />
		<result column="board_type" property="boardType"
			jdbcType="INTEGER" />
	</resultMap>

	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value}
									and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>

	<sql id="Base_Column_List">
		id, line, work_order, board_type
	</sql>

	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.jimi.smt.eps.serversocket.entity.Display">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from display
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from display
		where id = #{id,jdbcType=INTEGER}
	</select>

	<delete id="deleteByPrimaryKey"
		parameterType="java.lang.Integer">
		delete from display
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<delete id="deleteByExample"
		parameterType="com.jimi.smt.eps.serversocket.entity.Display">
		delete from display
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>

	<insert id="insert"
		parameterType="com.jimi.smt.eps.serversocket.entity.Display">
		insert into display (id, line, work_order,
		board_type)
		values (#{id,jdbcType=INTEGER}, #{line,jdbcType=VARCHAR},
		#{workOrder,jdbcType=VARCHAR},
		#{boardType,jdbcType=INTEGER})
	</insert>

	<insert id="insertSelective"
		parameterType="com.jimi.smt.eps.serversocket.entity.Display">
		insert into display
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="line != null">
				line,
			</if>
			<if test="workOrder != null">
				work_order,
			</if>
			<if test="boardType != null">
				board_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="line != null">
				#{line,jdbcType=VARCHAR},
			</if>
			<if test="workOrder != null">
				#{workOrder,jdbcType=VARCHAR},
			</if>
			<if test="boardType != null">
				#{boardType,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>

	<select id="countByExample"
		parameterType="com.jimi.smt.eps.serversocket.entity.Display"
		resultType="java.lang.Integer">
		select count(*) from display
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>

	<update id="updateByExampleSelective" parameterType="map">
		update display
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.line != null">
				line = #{record.line,jdbcType=VARCHAR},
			</if>
			<if test="record.workOrder != null">
				work_order = #{record.workOrder,jdbcType=VARCHAR},
			</if>
			<if test="record.boardType != null">
				board_type = #{record.boardType,jdbcType=INTEGER},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<update id="updateByExample" parameterType="map">
		update display
		set id = #{record.id,jdbcType=INTEGER},
		line =
		#{record.line,jdbcType=VARCHAR},
		work_order =
		#{record.workOrder,jdbcType=VARCHAR},
		board_type =
		#{record.boardType,jdbcType=INTEGER}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>

	<update id="updateByPrimaryKeySelective"
		parameterType="com.jimi.smt.eps.serversocket.entity.Display">
		update display
		<set>
			<if test="line != null">
				line = #{line,jdbcType=VARCHAR},
			</if>
			<if test="workOrder != null">
				work_order = #{workOrder,jdbcType=VARCHAR},
			</if>
			<if test="boardType != null">
				board_type = #{boardType,jdbcType=INTEGER},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>

	<update id="updateByPrimaryKey"
		parameterType="com.jimi.smt.eps.serversocket.entity.Display">
		update display
		set line = #{line,jdbcType=VARCHAR},
		work_order = #{workOrder,jdbcType=VARCHAR},
		board_type =
		#{boardType,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
</mapper>